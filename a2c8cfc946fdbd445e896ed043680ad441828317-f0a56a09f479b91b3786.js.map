{"version":3,"sources":["webpack:///./src/components/Sidebar/index.js"],"names":["config","wordings","githubUsername","email","iconUrl","about","facebook","name","Icon","href","icon","target","rel","className","Sidebar","to","src","alt","defaultProps","totalCount","latestPosts","query","render","data","all","limited"],"mappings":"uMAmBIA,SAPFC,iB,MAAW,G,EACXC,EAMEF,SANFE,eACAC,EAKEH,SALFG,MACAC,EAIEJ,SAJFI,QACAC,EAGEL,SAHFK,MACAC,EAEEN,SAFFM,SACAC,EACEP,SADFO,KAGIC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,uBACEC,OAAO,SACPF,KAAMA,EACNG,IAAI,wCACJC,UAAU,eAEV,0BAAMA,UAAU,yBACd,kBAAC,IAAD,CAAiBH,KAAMA,OAMvBI,EAAU,kBACd,4BAAQD,UAAU,gFAChB,yBAAKA,UAAU,YACb,kBAAC,OAAD,CAAME,GAAIV,EAAOI,KAAMJ,EAAOQ,UAAU,QACtC,yBAAKA,UAAU,SAASG,IAAKZ,EAASa,IAAKV,IAC3C,4BAAKA,IAEP,uBAAGM,UAAU,QAAQZ,EAAS,IAC9B,uBAAGY,UAAU,QAAQZ,EAAS,IAC9B,kBAACO,EAAD,CACEC,KAAI,sBAAwBP,EAC5BQ,KAAM,CAAC,MAAO,YAEhB,kBAACF,EAAD,CAAMC,KAAI,UAAYN,EAASO,KAAM,CAAC,MAAO,cAC5CJ,GACC,kBAACE,EAAD,CACEC,KAAI,4BAA8BH,EAA9B,IACJI,KAAM,CAAC,MAAO,iBAkBxBI,EAAQI,aAAe,CACrBC,WAAY,EACZC,YAAa,IAGA,sBACb,kBAAC,cAAD,CACEC,MAAK,aAiCLC,OAAQ,SAAAC,GAAI,OAAI,kBAACT,EAAD,iBAAaS,EAAKC,IAASD,EAAKE,WAlClD,W","file":"a2c8cfc946fdbd445e896ed043680ad441828317-f0a56a09f479b91b3786.js","sourcesContent":["import React from \"react\";\r\nimport { Link, StaticQuery, graphql } from \"gatsby\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { config } from \"../../../data\";\r\n\r\n// import Information from \"./Information\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst {\r\n  wordings = [],\r\n  githubUsername,\r\n  email,\r\n  iconUrl,\r\n  about,\r\n  facebook,\r\n  name\r\n} = config;\r\n\r\nconst Icon = ({ href, icon }) => (\r\n  <a\r\n    target=\"_blank\"\r\n    href={href}\r\n    rel=\"external nofollow noopener noreferrer\"\r\n    className=\"custom-icon\"\r\n  >\r\n    <span className=\"fa-layers fa-fw fa-2x\">\r\n      <FontAwesomeIcon icon={icon} />\r\n    </span>\r\n  </a>\r\n);\r\n\r\n// const Sidebar = ({ totalCount, latestPosts }) => (\r\nconst Sidebar = () => (\r\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\r\n    <div className=\"about-me\">\r\n      <Link to={about} href={about} className=\"name\">\r\n        <img className=\"avatar\" src={iconUrl} alt={name} />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n      <p className=\"mb-1\">{wordings[0]}</p>\r\n      <p className=\"mb-3\">{wordings[1]}</p>\r\n      <Icon\r\n        href={`https://github.com/${githubUsername}`}\r\n        icon={[\"fab\", \"github\"]}\r\n      />\r\n      <Icon href={`mailto:${email}`} icon={[\"far\", \"envelope\"]} />\r\n      {facebook && (\r\n        <Icon\r\n          href={`https://www.facebook.com/${facebook}/`}\r\n          icon={[\"fab\", \"facebook\"]}\r\n        />\r\n      )}\r\n      {/* <Information totalCount={totalCount} posts={latestPosts} /> */}\r\n    </div>\r\n  </header>\r\n);\r\n\r\nIcon.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nSidebar.propTypes = {\r\n  totalCount: PropTypes.number, //eslint-disable-line\r\n  latestPosts: PropTypes.array //eslint-disable-line\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  totalCount: 0,\r\n  latestPosts: []\r\n};\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      fragment cardData on StrapiArticle {\r\n        id\r\n        title\r\n        categories {\r\n          name\r\n        }\r\n        headerImage {\r\n          publicURL\r\n        }\r\n        description\r\n        slug\r\n        content\r\n        date\r\n      }\r\n      \r\n      query SidebarQuery {\r\n        all: allStrapiArticle {\r\n          totalCount\r\n        }\r\n        limited: allStrapiArticle(\r\n          sort: {\r\n            order: DESC, fields: date},\r\n            limit: 6\r\n          ) {\r\n          latestPosts: edges {\r\n            node {\r\n              ...cardData\r\n            }\r\n          }\r\n        }\r\n      }        \r\n    `}\r\n    render={data => <Sidebar {...data.all} {...data.limited} />}\r\n  />\r\n);\r\n"],"sourceRoot":""}