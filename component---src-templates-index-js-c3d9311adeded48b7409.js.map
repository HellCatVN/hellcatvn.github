{"version":3,"sources":["webpack:///./src/components/Tag/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/Card/index.js"],"names":["Tag","name","count","href","className","defaultProps","NavLinkText","color","text","style","NavLink","test","url","to","Page","pageContext","group","index","first","last","pathPrefix","map","node","console","log","headerImage","publicURL","previousUrl","nextUrl","Fragment","marginTop","slug","key","justifyContent","marginBottom","CardHeader","image","backgroundColor","backgroundImage","Card","title","date","headerBackgroundColor","description","categories","split","tag"],"mappings":"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","file":"component---src-templates-index-js-c3d9311adeded48b7409.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Tag = ({ name, count }) => (\r\n  <a href={`/tag/${name}`} className=\"header-tag\">\r\n    {name}\r\n    &nbsp;|&nbsp;\r\n    {count}\r\n  </a>\r\n);\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n\r\nTag.defaultProps = {\r\n  count: \"\"\r\n};\r\n\r\nexport default Tag;\r\n","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport Link from 'gatsby-link';\r\n\r\nimport Card from '../components/Card';\r\nimport Sidebar from '../components/Sidebar';\r\nimport './index.scss';\r\n\r\nconst NavLinkText = ({ color, text }) => (\r\n  <div\r\n    className=\"navlink\"\r\n    style={{\r\n      color\r\n    }}\r\n  >\r\n    {text}\r\n  </div>\r\n);\r\n\r\nconst NavLink = ({ test, url, text }) => {\r\n  if (!test) {\r\n    return <NavLinkText color=\"#7d7d7d\" text={text} />;\r\n  }\r\n\r\n  return (\r\n    <Link to={`${url}`}>\r\n      <NavLinkText color=\"#66ccff\" text={text} />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Page = ({ pageContext }) => {\r\n  const { group, index, first, last, pathPrefix } = pageContext;\r\n  group.map(({ node }) => {\r\n    console.log(node.headerImage.publicURL);\r\n  });\r\n  const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\r\n  const nextUrl = `/${pathPrefix}/${index + 1}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"row homepage\"\r\n        style={{\r\n          marginTop: 20\r\n        }}\r\n      >\r\n        <Sidebar />\r\n        <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\r\n          {group.map(({ node }) => (\r\n            <Card {...node} url={node.slug} key={node.slug} />\r\n          ))}\r\n\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              marginBottom: '20px'\r\n            }}\r\n          >\r\n            <div className=\"previousLink\">\r\n              <NavLink test={!first} url={previousUrl} text=\"Previous\" />\r\n            </div>\r\n            <div className=\"nextLink\">\r\n              <NavLink test={!last} url={nextUrl} text=\"Next\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Tag from \"../Tag\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst imageStyle = (headerImage, color) => ({\r\n  backgroundColor: `#${color}`,\r\n  backgroundImage: ` url(${headerImage.publicURL})`\r\n});\r\n\r\nconst CardHeader = ({ url, image, backgroundColor }) => (\r\n  <Link to={url} href={url}>\r\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\r\n  </Link>\r\n);\r\n\r\nconst Card = ({\r\n  title,\r\n  date,\r\n  url,\r\n  headerImage,\r\n  headerBackgroundColor,\r\n  description,\r\n  categories = []\r\n}) => (\r\n  <div className=\"col-sm-12 pb-4\">\r\n    <div className=\"custom-card\">\r\n      {headerImage && (\r\n        <CardHeader\r\n          url={url}\r\n          image={headerImage}\r\n          backgroundColor={headerBackgroundColor}\r\n        />\r\n      )}\r\n      <div className=\"data\">\r\n        <div className=\"content\">\r\n          <div className=\"stats\">\r\n            <span className=\"date\">{date.split(\"T\")[0]}</span>\r\n            {categories.map(tag => (\r\n              <Tag name={tag.name} key={tag.name} />\r\n            ))}\r\n          </div>\r\n          <Link to={url} href={url}>\r\n            <h4 className=\"title\">{title}</h4>\r\n          </Link>\r\n          <p>{description}</p>\r\n          <Link to={url} href={url}>\r\n            More...\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  url: PropTypes.string.isRequired,\r\n  headerImage: PropTypes.object,\r\n  headerBackgroundColor: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  categories: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nCard.defaultProps = {\r\n  headerImage: {},\r\n  categories: [],\r\n  date: \"\",\r\n  headerBackgroundColor: \"\"\r\n};\r\n\r\nCardHeader.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string,\r\n  image: PropTypes.string\r\n};\r\n\r\nCardHeader.defaultProps = {\r\n  backgroundColor: \"\",\r\n  image: \"\"\r\n};\r\n\r\nexport default Card;\r\n"],"sourceRoot":""}